<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="chooseRedPlayerBtn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="chooseBluePlayerBtn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEYAAABGCAYAAABxLuKEAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAABXFJREFUeF7tXN9rHFUYHfoQwR8heWiqFQRN0YqiVBRFEBTyoE+CD6JCIVXwrVqf
        ChYfBaHd7M/sj5nNZpN0q1WkVFBqHhrFQtWkTaNJ3cZUm7SkZtf/4fOc2YnsTu5uZjebbvbOHjhkuHNn
        994z3733++79NkYHHXTQ9jg8uSTG0O9imGtiWLdL5HXoqnw0eU2caj4DOm9kCmKMQ4jxf1xEGe8FIZqv
        EISljFMUtyBuok7kb5+IE54vdVgphIJjtJzLPhBnpA5R1pnGMzrjvsRvsADVnLIJ8UxfCs9qi+iyuuNe
        GL2hsTBWA9ayThPUFvRRVJ32whSoLaJYelWd3pQQNLSorzD9I3ONTb7ZNXlq9IrGFkNYDSzXHIK648Hk
        LKymqBZAxWxR+pPT+gtj48SMN3EgihHG8PMT+k24+RwimD8qA0mnzCzI46lf/CVKOZ7LIcoOLGA5phjg
        8Tl5/qTOXq4CA7lZef8M5pg6cfCrS/Lqlwg+tUTgj9KckSnK3XHvFtGVytvPGKNYzbTzZUJ07MqWafoy
        aXQ2MCNvn4VgLrz5DQTg9gSj6gq/B9dhTWKmu0JYgaruv6B8lCLhep0jIMsqJuQyjhWkN6nDHBTbQkSt
        JK1GgyH15Cj8kGw1i2mAmGtemNDFtwly4m2COPyM2JImoji438S8QD+lwSCSzz5kahxIPpzGMOBOXhqd
        zYDsNMUagwA2nbIMrlkHdfdl4QT6CYPfXpOnc3npsa7KLnNJdlnXpTcxJwc+X5RD32m8/9JBB83FsckF
        efGLvLw3tSpHplbkw6lleff8qrx0Oi9v5HwcWdtgVJ25XfJ4SU66JpZl34PCuJdnE0L5HscXIIZLHK2P
        Srwi+GelKKTWh2teQRE2CNMZSoadReUWhtsPfsbBs/PO3otLGJS9dtpn+74VCOchhEIYMnrdx8LYOXgK
        UUje8yWGEDFXsxabuDe0cT9YazyQuCyeTiJRp9+85A9xBrI/Y3L9Vy2EiiNFeeeMrmdKDgayFzF31CHK
        Oq01Gfxa08zNvakrsBQPw6caYTkHLN0i7iAm2npSP6qRJ5kxDVLp++Iwf54m1lx96iT3hM012Zdu141x
        HqUyq1vVuWaQnz0EB7GtEGDE3EQrqUqIE2wTD7krXudvBbbMonSH22FSTqoav82Mr7aBMKqtyu1mog32
        b7oC8Gxh3soObAsLck9kZmcK80pqqrJhYSYK3QnLwXe4Eolejp7bISJ9hiAvicnWjcgdWK4jyxu/NwVr
        DbQ6TSTCFYjDBm+O3q0L3TE4eMwEb6ZAdPDSRemJ/Kp4GYuog/v0sodbGXhW/FoN11G1w7V7GHNA0jlU
        25DXuxlR185+ABOrsoeZ5SoML1W+AGZKtAKvn0JnmUlZ3gm+zehfNRv06ARinRNOrozFDpCOaCSvWcZ7
        rIO6+3ObJAuF4eTxu8vbAiHfUiQ+bjuOTMJs+RbLG7NOxEd74/WtFEcv3JKjP92q65m+BKyH2Z+qNoys
        ycc/tOoXuCFYh6pRJM0ab7w71vwduHuHEUDSmtxW8j9RPtTq/JqE0xBlA0EKhLdnxFakNzotg+dqDzUV
        DuGZHgvDghmgHG5VBSFxb8fkAttj3ItTB5HsFDKQJ5BxDJ0QM79x/emPJfKaZbzHOqzLsppiOGQbeOS7
        k/BIHIEcw4G6l2Y+g78T6BTJ61oWqCKzOc2CPJa4uLNEKcd+cxo+xE0PJr9F8rN59oTveiLTRptWxy7c
        lN1JNJj/m8HO0ERnbB+GFlWvYKjPZ+3lHH+jN2SPNS+ffK/BMe7h88vyzCn4MEGsUiH4JSn4K7avslrm
        z4DlZazDuuFZefbkvHwwtdL+QnTQgZ9gGP8BicOzaKsd/dEAAAAASUVORK5CYII=
</value>
  </data>
</root>